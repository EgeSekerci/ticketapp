services:
  web:
    depends_on:
      database:
        condition: service_healthy
    build:
      context: .
    container_name: rest-server
    volumes:
      - .:/go
    networks:
      - mynet
    ports:
      - 8080:8080
    deploy:
      restart_policy:
        condition: on-failure
    env_file:
      - .env
    develop:
      watch:
      - action: rebuild
        path: .

  database:
    image: postgres:latest
    container_name: database
    environment:
      - POSTGRES_HOST=${DB_HOST}
      - POSTGRES_PORT=${DB_PORT}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD:?database password not set}
      - POSTGRES_DB=${DB_NAME}
    networks:
      - mynet
    ports:
      - 5432:5432
    volumes:
        - ./dbScript:/docker-entrypoint-initdb.d
        - pgdata:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ticketapp"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s

networks:
  mynet:
    driver: bridge

volumes:
  pgdata:
